Use of Hive in this app:

To locally store the notes (title and contents) even after the app has been restarted/closed.
Hive is a lightweight and fast NoSQL DB that can be used to store data in flutter applications.

Files edited in this project to integrate Hive:
1. main.dart
2. note_model.dart
3. note_model.g.dart
4. display_screen.dart
5. new_note_screen.dart
6. view_note_screen.dart
7. pubspec.yaml

----------------------------------------------------------------

1. main.dart
  Initialization and registering the adapter , Opening the boxjust once here

2. note_model.dart
  Create the NoteModel and create a Hive Object.
  The NoteModel accepts a title and content.

3. note_model.g.dart
   This is an auto-generated file, that is generated on creating and running pub dev get on Terminal.

4. display_screen.dart
    -initialization of :Box<NoteModel>? notesBox;
    -void _initHive() async {
    final box = await Hive.openBox<NoteModel>('notes');
    setState(() {
      notesBox = box; });}
    -listview builder: to get the notes from the box to display as per their respective index
    -pressing addnote and allowing a navigating to new note page
    -tapping an existing note retreived from box and navigating to view note page

5. new_note_screen.dart
  -adding new note to box , storing its title and contents
  
6. view_note_screen.dart
  - loading note when clicked, retrive from box at that respective index
  - save note
  - delete note

7. pubspec.yaml

  All the dev and dependencies were imported here:
// dependencies:
//   flutter:
//     sdk: flutter
//   google_fonts: ^6.1.0
//   hive: ^2.2.3
//   hive_flutter: ^1.1.0
//   path_provider: ^2.1.1

//   # The following adds the Cupertino Icons font to your application.
//   # Use with the CupertinoIcons class for iOS style icons.
//   cupertino_icons: ^1.0.8

// dev_dependencies:
//   hive_generator: ^2.0.1
//   build_runner: ^2.4.0
//   flutter_test:
//     sdk: flutter
    
